unit fServerDataModule;

interface

uses
  SysUtils, Classes, Windows,
  uROClient, uROPoweredByRemObjectsButton, uROClientIntf, uROServer,
  uROBinMessage, uROIndyHTTPServer,
  uDAEngine, uDADriverManager, uDAClasses, uROSessions,
  uDAADODriver, uROIndyTCPServer, Registry, uDASDACDriver,
  uROSOAPMessage, Forms, uROBaseHTTPServer, uDADataDictionary,
  uDAStreamableComponent, uDAConnectionManager, uROMessage, uROComponent,
  uROBaseConnection, uROCustomHTTPServer, uROJSONMessage, uROBaseSuperTCPServer,
  uROSuperTCPServer;

type
  TServerDataModule = class(TDataModule)
    Server: TROIndyHTTPServer;
    Message: TROBinMessage;
    ConnectionManager: TDAConnectionManager;
    DriverManager: TDADriverManager;
    SessionManager: TROInMemorySessionManager;
    DataDictionary: TDADataDictionary;
    
    procedure DataModuleCreate(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
    AplicaSobrantes: Boolean;
  end;

var
  ServerDataModule: TServerDataModule;

implementation

uses UtileriasComun;

{$R *.dfm}

procedure TServerDataModule.DataModuleCreate(Sender: TObject);
const
  Cadena = 'SDAC?Server=%s;Database=%s;UserID=%s;Password=%s;Schemas=1;Integrated Security=SSPI;';
begin
  try


    RutaRegistro:='Server Empresas';
    ConnectionManager.Connections[0].ConnectionString:=Format(Cadena, [LeerRegistro('Servidor','127.0.0.1'),
                                                                      LeerRegistro('Database','Empresas'),
                                                                      LeerRegistro('User','sa'),
                                                                      LeerRegistro('Password','')]);
    AplicaSobrantes:=LeerRegistro('AplicaSobrantes', '0') = '1';
    Server.Port := StrToInt(LeerRegistro('Puerto', '9003'))
  finally
    Server.Active := true;
  end;
end;

end.
