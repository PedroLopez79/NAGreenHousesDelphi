unit LibraryAdministracion_Invk;

{----------------------------------------------------------------------------}
{ This unit was automatically generated by the RemObjects SDK after reading  }
{ the RODL file associated with this project .                               }
{                                                                            }
{ Do not modify this unit manually, or your changes will be lost when this   }
{ unit is regenerated the next time you compile the project.                 }
{----------------------------------------------------------------------------}

{$I Remobjects.inc}

interface

uses
  {vcl:} Classes,
  {RemObjects:} uROXMLIntf, uROServer, uROServerIntf, uROTypes, uROClientIntf,
  {Used RODL Intf's:} DataAbstract4_Intf,
  {Used RODL Invk's:} DataAbstract4_Invk,
  {Generated:} LibraryAdministracion_Intf;

type
  TServiceAdministracion_Invoker = class(TDataAbstractService_Invoker)
  private
  protected
  public
    constructor Create; override;
  published
    procedure Invoke_AbreDataSetReporte(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_ActualizaCupon(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_ActualizaCuponConReferencia(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_ActualizaLiquidacionCorte(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_ActualizarStatusValeCredito(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_ActualizaStatusCupon(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_GeneraFactura(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_BuscaReporte(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_CambiaFolioFactura(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_CancelaFactura(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_CierraLiquidacion(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_CostoProducto(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_DatosCliente(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_Existencia(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_FacturaExpress(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_FacturaID(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_FacturaYLiquidacion(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_Fecha(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_Folio(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_FolioActual(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_FolioActual2(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_GuardaAccesos(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_GuardaConsumoExpress(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_GuardaLimiteFactura(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_GuardarDatosFactura(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_GuardarDatosLiquidacion(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_GuardarDatosReciboPago(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_GuardarFacturaExpress(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_InsertaDeposito(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_InsertaProductoPrecio(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_Login(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_ModificarFolioActual(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_ObtenerStatusCupon(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_ObtenerTipoCambioIDPorEstacion(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_ObtenerTipoCambioPorEstacion(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_PrecioProducto(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_StatusTicket(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_SumaAnticipo(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_SumaVentasCorte(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_ValoresTurno(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_VersionServer(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_LiquidacionCerrada(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_ClienteValido(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_BuscaOtroProducto(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_TurnoALiquidacionID(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_BuscaSagarpa(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_PuntosCalculaSaldo(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_PuntosCalculaPuntos(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_PuntosGuardaDatos(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_PuntosDatos(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_EliminaAutomaticosLiquidacion(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_BuscaDespachadorLiquidacion(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_EntregaPremio(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_DatosPremio(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_ValidaConsumo(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_AgrupacionesBomba(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_DatosCerrarLiquidacion(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_ProcesaVentasLiquidacion(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_TicketsLiquidacion(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_ValidaFolioFactura(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_PuntosGuardaCriterios(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_DatosFacturaElectronica(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_LlavePrivaCertificado(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_SELLOPEMs(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_CERs(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_ValidaLiquidacionDespachador(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_ActualizaLiquidacionProd(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_PuntosDespachador(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_GuardarDatosFacturaPemex(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_AfectaInventarios(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_InsertaFacturaElectronica(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_CERsNUM(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
  end;

implementation

uses
  {RemObjects:} uRORes, uROClient;

{ TServiceAdministracion_Invoker }

constructor TServiceAdministracion_Invoker.Create;
begin
  inherited Create;
  FAbstract := False;
end;

procedure TServiceAdministracion_Invoker.Invoke_AbreDataSetReporte(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function AbreDataSetReporte(const SQL: AnsiString; const Parametros: TParametros): Binary; }
var
  SQL: AnsiString;
  Parametros: LibraryAdministracion_Intf.TParametros;
  lResult: Binary;
  __lObjectDisposer: TROObjectDisposer;
begin
  Parametros := nil;
  lResult := nil;
  try
    __Message.Read('SQL', TypeInfo(AnsiString), SQL, []);
    __Message.Read('Parametros', TypeInfo(LibraryAdministracion_Intf.TParametros), Parametros, []);

    lResult := (__Instance as IServiceAdministracion).AbreDataSetReporte(SQL, Parametros);

    __Message.InitializeResponseMessage(__Transport, 'LibraryAdministracion', 'ServiceAdministracion', 'AbreDataSetReporteResponse');
    __Message.Write('Result', TypeInfo(Binary), lResult, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
    __lObjectDisposer := TROObjectDisposer.Create(__Instance);
    try
      __lObjectDisposer.Add(Parametros);
      __lObjectDisposer.Add(lResult);
    finally
      __lObjectDisposer.Free();
    end;
  end;
end;

procedure TServiceAdministracion_Invoker.Invoke_ActualizaCupon(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ procedure ActualizaCupon(const Barras: AnsiString; const DiaConsumo: Integer; const EjercicioConsumo: Integer; const FechaConsumo: DateTime; 
                             const PeriodoConsumo: Integer; const Secuencia: Integer; const Ticket: Integer; const Liquidacion: Integer); }
var
  Barras: AnsiString;
  DiaConsumo: Integer;
  EjercicioConsumo: Integer;
  FechaConsumo: DateTime;
  PeriodoConsumo: Integer;
  Secuencia: Integer;
  Ticket: Integer;
  Liquidacion: Integer;
begin
  try
    __Message.Read('Barras', TypeInfo(AnsiString), Barras, []);
    __Message.Read('DiaConsumo', TypeInfo(Integer), DiaConsumo, []);
    __Message.Read('EjercicioConsumo', TypeInfo(Integer), EjercicioConsumo, []);
    __Message.Read('FechaConsumo', TypeInfo(DateTime), FechaConsumo, [paIsDateTime]);
    __Message.Read('PeriodoConsumo', TypeInfo(Integer), PeriodoConsumo, []);
    __Message.Read('Secuencia', TypeInfo(Integer), Secuencia, []);
    __Message.Read('Ticket', TypeInfo(Integer), Ticket, []);
    __Message.Read('Liquidacion', TypeInfo(Integer), Liquidacion, []);

    (__Instance as IServiceAdministracion).ActualizaCupon(Barras, DiaConsumo, EjercicioConsumo, FechaConsumo, PeriodoConsumo, Secuencia, Ticket, Liquidacion);

    __Message.InitializeResponseMessage(__Transport, 'LibraryAdministracion', 'ServiceAdministracion', 'ActualizaCuponResponse');
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

    __oResponseOptions := [roNoResponse];

  finally
  end;
end;

procedure TServiceAdministracion_Invoker.Invoke_ActualizaCuponConReferencia(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ procedure ActualizaCuponConReferencia(const Barras: AnsiString; const DiaConsumo: Integer; const EjercicioConsumo: Integer; const FechaConsumo: DateTime; 
                                          const PeriodoConsumo: Integer; const Secuencia: Integer; const Ticket: Integer; const Referencia: AnsiString); }
var
  Barras: AnsiString;
  DiaConsumo: Integer;
  EjercicioConsumo: Integer;
  FechaConsumo: DateTime;
  PeriodoConsumo: Integer;
  Secuencia: Integer;
  Ticket: Integer;
  Referencia: AnsiString;
begin
  try
    __Message.Read('Barras', TypeInfo(AnsiString), Barras, []);
    __Message.Read('DiaConsumo', TypeInfo(Integer), DiaConsumo, []);
    __Message.Read('EjercicioConsumo', TypeInfo(Integer), EjercicioConsumo, []);
    __Message.Read('FechaConsumo', TypeInfo(DateTime), FechaConsumo, [paIsDateTime]);
    __Message.Read('PeriodoConsumo', TypeInfo(Integer), PeriodoConsumo, []);
    __Message.Read('Secuencia', TypeInfo(Integer), Secuencia, []);
    __Message.Read('Ticket', TypeInfo(Integer), Ticket, []);
    __Message.Read('Referencia', TypeInfo(AnsiString), Referencia, []);

    (__Instance as IServiceAdministracion).ActualizaCuponConReferencia(Barras, DiaConsumo, EjercicioConsumo, FechaConsumo, PeriodoConsumo, Secuencia, Ticket, Referencia);

    __Message.InitializeResponseMessage(__Transport, 'LibraryAdministracion', 'ServiceAdministracion', 'ActualizaCuponConReferenciaResponse');
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

    __oResponseOptions := [roNoResponse];

  finally
  end;
end;

procedure TServiceAdministracion_Invoker.Invoke_ActualizaLiquidacionCorte(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ procedure ActualizaLiquidacionCorte(const Liquidacion: Integer; const Secuencia: Integer; const AgrupacionID: Integer); }
var
  Liquidacion: Integer;
  Secuencia: Integer;
  AgrupacionID: Integer;
begin
  try
    __Message.Read('Liquidacion', TypeInfo(Integer), Liquidacion, []);
    __Message.Read('Secuencia', TypeInfo(Integer), Secuencia, []);
    __Message.Read('AgrupacionID', TypeInfo(Integer), AgrupacionID, []);

    (__Instance as IServiceAdministracion).ActualizaLiquidacionCorte(Liquidacion, Secuencia, AgrupacionID);

    __Message.InitializeResponseMessage(__Transport, 'LibraryAdministracion', 'ServiceAdministracion', 'ActualizaLiquidacionCorteResponse');
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

    __oResponseOptions := [roNoResponse];

  finally
  end;
end;

procedure TServiceAdministracion_Invoker.Invoke_ActualizarStatusValeCredito(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ procedure ActualizarStatusValeCredito(const CarteraValeCreditoID: Integer; const Status: AnsiString; const FacturaID: Integer); }
var
  CarteraValeCreditoID: Integer;
  Status: AnsiString;
  FacturaID: Integer;
begin
  try
    __Message.Read('CarteraValeCreditoID', TypeInfo(Integer), CarteraValeCreditoID, []);
    __Message.Read('Status', TypeInfo(AnsiString), Status, []);
    __Message.Read('FacturaID', TypeInfo(Integer), FacturaID, []);

    (__Instance as IServiceAdministracion).ActualizarStatusValeCredito(CarteraValeCreditoID, Status, FacturaID);

    __Message.InitializeResponseMessage(__Transport, 'LibraryAdministracion', 'ServiceAdministracion', 'ActualizarStatusValeCreditoResponse');
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

    __oResponseOptions := [roNoResponse];

  finally
  end;
end;

procedure TServiceAdministracion_Invoker.Invoke_ActualizaStatusCupon(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ procedure ActualizaStatusCupon(const Barras: AnsiString; const DiaConsumo: Integer; const EjercicioConsumo: Integer; const FechaConsumo: DateTime; 
                                   const LiquidacionID: Integer; const PeriodoConsumo: Integer; const Secuencia: Integer); }
var
  Barras: AnsiString;
  DiaConsumo: Integer;
  EjercicioConsumo: Integer;
  FechaConsumo: DateTime;
  LiquidacionID: Integer;
  PeriodoConsumo: Integer;
  Secuencia: Integer;
begin
  try
    __Message.Read('Barras', TypeInfo(AnsiString), Barras, []);
    __Message.Read('DiaConsumo', TypeInfo(Integer), DiaConsumo, []);
    __Message.Read('EjercicioConsumo', TypeInfo(Integer), EjercicioConsumo, []);
    __Message.Read('FechaConsumo', TypeInfo(DateTime), FechaConsumo, [paIsDateTime]);
    __Message.Read('LiquidacionID', TypeInfo(Integer), LiquidacionID, []);
    __Message.Read('PeriodoConsumo', TypeInfo(Integer), PeriodoConsumo, []);
    __Message.Read('Secuencia', TypeInfo(Integer), Secuencia, []);

    (__Instance as IServiceAdministracion).ActualizaStatusCupon(Barras, DiaConsumo, EjercicioConsumo, FechaConsumo, LiquidacionID, PeriodoConsumo, Secuencia);

    __Message.InitializeResponseMessage(__Transport, 'LibraryAdministracion', 'ServiceAdministracion', 'ActualizaStatusCuponResponse');
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

    __oResponseOptions := [roNoResponse];

  finally
  end;
end;

procedure TServiceAdministracion_Invoker.Invoke_GeneraFactura(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function GeneraFactura(const EstacionID: Integer; const Serie: AnsiString; const FechaCorte: DateTime; const ClienteID: Integer; 
                           const UsuarioID: Integer): Integer; }
var
  EstacionID: Integer;
  Serie: AnsiString;
  FechaCorte: DateTime;
  ClienteID: Integer;
  UsuarioID: Integer;
  lResult: Integer;
begin
  try
    __Message.Read('EstacionID', TypeInfo(Integer), EstacionID, []);
    __Message.Read('Serie', TypeInfo(AnsiString), Serie, []);
    __Message.Read('FechaCorte', TypeInfo(DateTime), FechaCorte, [paIsDateTime]);
    __Message.Read('ClienteID', TypeInfo(Integer), ClienteID, []);
    __Message.Read('UsuarioID', TypeInfo(Integer), UsuarioID, []);

    lResult := (__Instance as IServiceAdministracion).GeneraFactura(EstacionID, Serie, FechaCorte, ClienteID, UsuarioID);

    __Message.InitializeResponseMessage(__Transport, 'LibraryAdministracion', 'ServiceAdministracion', 'GeneraFacturaResponse');
    __Message.Write('Result', TypeInfo(Integer), lResult, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
  end;
end;

procedure TServiceAdministracion_Invoker.Invoke_BuscaReporte(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function BuscaReporte(const Nombre: AnsiString; const TipoTemplate: Integer): TReporte; }
var
  Nombre: AnsiString;
  TipoTemplate: Integer;
  lResult: LibraryAdministracion_Intf.TReporte;
  __lObjectDisposer: TROObjectDisposer;
begin
  lResult := nil;
  try
    __Message.Read('Nombre', TypeInfo(AnsiString), Nombre, []);
    __Message.Read('TipoTemplate', TypeInfo(Integer), TipoTemplate, []);

    lResult := (__Instance as IServiceAdministracion).BuscaReporte(Nombre, TipoTemplate);

    __Message.InitializeResponseMessage(__Transport, 'LibraryAdministracion', 'ServiceAdministracion', 'BuscaReporteResponse');
    __Message.Write('Result', TypeInfo(LibraryAdministracion_Intf.TReporte), lResult, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
    __lObjectDisposer := TROObjectDisposer.Create(__Instance);
    try
      __lObjectDisposer.Add(lResult);
    finally
      __lObjectDisposer.Free();
    end;
  end;
end;

procedure TServiceAdministracion_Invoker.Invoke_CambiaFolioFactura(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function CambiaFolioFactura(const Serie: AnsiString; const Folio: Integer; const NewSerie: AnsiString; const NewFolio: Integer): AnsiString; }
var
  Serie: AnsiString;
  Folio: Integer;
  NewSerie: AnsiString;
  NewFolio: Integer;
  lResult: AnsiString;
begin
  try
    __Message.Read('Serie', TypeInfo(AnsiString), Serie, []);
    __Message.Read('Folio', TypeInfo(Integer), Folio, []);
    __Message.Read('NewSerie', TypeInfo(AnsiString), NewSerie, []);
    __Message.Read('NewFolio', TypeInfo(Integer), NewFolio, []);

    lResult := (__Instance as IServiceAdministracion).CambiaFolioFactura(Serie, Folio, NewSerie, NewFolio);

    __Message.InitializeResponseMessage(__Transport, 'LibraryAdministracion', 'ServiceAdministracion', 'CambiaFolioFacturaResponse');
    __Message.Write('Result', TypeInfo(AnsiString), lResult, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
  end;
end;

procedure TServiceAdministracion_Invoker.Invoke_CancelaFactura(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function CancelaFactura(const Folio: Integer; const Serie: AnsiString; const Fecha: DateTime; const EstacionID: Integer; const UsuarioID: Integer): AnsiString; }
var
  Folio: Integer;
  Serie: AnsiString;
  Fecha: DateTime;
  EstacionID: Integer;
  UsuarioID: Integer;
  lResult: AnsiString;
begin
  try
    __Message.Read('Folio', TypeInfo(Integer), Folio, []);
    __Message.Read('Serie', TypeInfo(AnsiString), Serie, []);
    __Message.Read('Fecha', TypeInfo(DateTime), Fecha, [paIsDateTime]);
    __Message.Read('EstacionID', TypeInfo(Integer), EstacionID, []);
    __Message.Read('UsuarioID', TypeInfo(Integer), UsuarioID, []);

    lResult := (__Instance as IServiceAdministracion).CancelaFactura(Folio, Serie, Fecha, EstacionID, UsuarioID);

    __Message.InitializeResponseMessage(__Transport, 'LibraryAdministracion', 'ServiceAdministracion', 'CancelaFacturaResponse');
    __Message.Write('Result', TypeInfo(AnsiString), lResult, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
  end;
end;

procedure TServiceAdministracion_Invoker.Invoke_CierraLiquidacion(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function CierraLiquidacion(const LiquidacionID: Integer): AnsiString; }
var
  LiquidacionID: Integer;
  lResult: AnsiString;
begin
  try
    __Message.Read('LiquidacionID', TypeInfo(Integer), LiquidacionID, []);

    lResult := (__Instance as IServiceAdministracion).CierraLiquidacion(LiquidacionID);

    __Message.InitializeResponseMessage(__Transport, 'LibraryAdministracion', 'ServiceAdministracion', 'CierraLiquidacionResponse');
    __Message.Write('Result', TypeInfo(AnsiString), lResult, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
  end;
end;

procedure TServiceAdministracion_Invoker.Invoke_CostoProducto(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function CostoProducto(const ProductoID: Integer): Double; }
var
  ProductoID: Integer;
  lResult: Double;
begin
  try
    __Message.Read('ProductoID', TypeInfo(Integer), ProductoID, []);

    lResult := (__Instance as IServiceAdministracion).CostoProducto(ProductoID);

    __Message.InitializeResponseMessage(__Transport, 'LibraryAdministracion', 'ServiceAdministracion', 'CostoProductoResponse');
    __Message.Write('Result', TypeInfo(Double), lResult, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
  end;
end;

procedure TServiceAdministracion_Invoker.Invoke_DatosCliente(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function DatosCliente(const ClienteID: Integer; const Referencia: AnsiString): TDatosCliente; }
var
  ClienteID: Integer;
  Referencia: AnsiString;
  lResult: LibraryAdministracion_Intf.TDatosCliente;
  __lObjectDisposer: TROObjectDisposer;
begin
  lResult := nil;
  try
    __Message.Read('ClienteID', TypeInfo(Integer), ClienteID, []);
    __Message.Read('Referencia', TypeInfo(AnsiString), Referencia, []);

    lResult := (__Instance as IServiceAdministracion).DatosCliente(ClienteID, Referencia);

    __Message.InitializeResponseMessage(__Transport, 'LibraryAdministracion', 'ServiceAdministracion', 'DatosClienteResponse');
    __Message.Write('Result', TypeInfo(LibraryAdministracion_Intf.TDatosCliente), lResult, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
    __lObjectDisposer := TROObjectDisposer.Create(__Instance);
    try
      __lObjectDisposer.Add(lResult);
    finally
      __lObjectDisposer.Free();
    end;
  end;
end;

procedure TServiceAdministracion_Invoker.Invoke_Existencia(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function Existencia(const EstacionID: Integer; const AlmacenID: Integer; const ProductoID: Integer; const Fecha: DateTime): Double; }
var
  EstacionID: Integer;
  AlmacenID: Integer;
  ProductoID: Integer;
  Fecha: DateTime;
  lResult: Double;
begin
  try
    __Message.Read('EstacionID', TypeInfo(Integer), EstacionID, []);
    __Message.Read('AlmacenID', TypeInfo(Integer), AlmacenID, []);
    __Message.Read('ProductoID', TypeInfo(Integer), ProductoID, []);
    __Message.Read('Fecha', TypeInfo(DateTime), Fecha, [paIsDateTime]);

    lResult := (__Instance as IServiceAdministracion).Existencia(EstacionID, AlmacenID, ProductoID, Fecha);

    __Message.InitializeResponseMessage(__Transport, 'LibraryAdministracion', 'ServiceAdministracion', 'ExistenciaResponse');
    __Message.Write('Result', TypeInfo(Double), lResult, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
  end;
end;

procedure TServiceAdministracion_Invoker.Invoke_FacturaExpress(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function FacturaExpress(const Serie: AnsiString; const Folio: Integer): TFacturaExpress; }
var
  Serie: AnsiString;
  Folio: Integer;
  lResult: LibraryAdministracion_Intf.TFacturaExpress;
  __lObjectDisposer: TROObjectDisposer;
begin
  lResult := nil;
  try
    __Message.Read('Serie', TypeInfo(AnsiString), Serie, []);
    __Message.Read('Folio', TypeInfo(Integer), Folio, []);

    lResult := (__Instance as IServiceAdministracion).FacturaExpress(Serie, Folio);

    __Message.InitializeResponseMessage(__Transport, 'LibraryAdministracion', 'ServiceAdministracion', 'FacturaExpressResponse');
    __Message.Write('Result', TypeInfo(LibraryAdministracion_Intf.TFacturaExpress), lResult, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
    __lObjectDisposer := TROObjectDisposer.Create(__Instance);
    try
      __lObjectDisposer.Add(lResult);
    finally
      __lObjectDisposer.Free();
    end;
  end;
end;

procedure TServiceAdministracion_Invoker.Invoke_FacturaID(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function FacturaID(const Serie: AnsiString; const Folio: Integer): Integer; }
var
  Serie: AnsiString;
  Folio: Integer;
  lResult: Integer;
begin
  try
    __Message.Read('Serie', TypeInfo(AnsiString), Serie, []);
    __Message.Read('Folio', TypeInfo(Integer), Folio, []);

    lResult := (__Instance as IServiceAdministracion).FacturaID(Serie, Folio);

    __Message.InitializeResponseMessage(__Transport, 'LibraryAdministracion', 'ServiceAdministracion', 'FacturaIDResponse');
    __Message.Write('Result', TypeInfo(Integer), lResult, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
  end;
end;

procedure TServiceAdministracion_Invoker.Invoke_FacturaYLiquidacion(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function FacturaYLiquidacion(const ClienteID: Integer): Boolean; }
var
  ClienteID: Integer;
  lResult: Boolean;
begin
  try
    __Message.Read('ClienteID', TypeInfo(Integer), ClienteID, []);

    lResult := (__Instance as IServiceAdministracion).FacturaYLiquidacion(ClienteID);

    __Message.InitializeResponseMessage(__Transport, 'LibraryAdministracion', 'ServiceAdministracion', 'FacturaYLiquidacionResponse');
    __Message.Write('Result', TypeInfo(Boolean), lResult, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
  end;
end;

procedure TServiceAdministracion_Invoker.Invoke_Fecha(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function Fecha: DateTime; }
var
  lResult: DateTime;
begin
  try
    lResult := (__Instance as IServiceAdministracion).Fecha;

    __Message.InitializeResponseMessage(__Transport, 'LibraryAdministracion', 'ServiceAdministracion', 'FechaResponse');
    __Message.Write('Result', TypeInfo(DateTime), lResult, [paIsDateTime]);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
  end;
end;

procedure TServiceAdministracion_Invoker.Invoke_Folio(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function Folio(const Campo: AnsiString; const Serie: AnsiString): Integer; }
var
  Campo: AnsiString;
  Serie: AnsiString;
  lResult: Integer;
begin
  try
    __Message.Read('Campo', TypeInfo(AnsiString), Campo, []);
    __Message.Read('Serie', TypeInfo(AnsiString), Serie, []);

    lResult := (__Instance as IServiceAdministracion).Folio(Campo, Serie);

    __Message.InitializeResponseMessage(__Transport, 'LibraryAdministracion', 'ServiceAdministracion', 'FolioResponse');
    __Message.Write('Result', TypeInfo(Integer), lResult, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
  end;
end;

procedure TServiceAdministracion_Invoker.Invoke_FolioActual(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function FolioActual(const Campo: AnsiString; const Serie: AnsiString): Integer; }
var
  Campo: AnsiString;
  Serie: AnsiString;
  lResult: Integer;
begin
  try
    __Message.Read('Campo', TypeInfo(AnsiString), Campo, []);
    __Message.Read('Serie', TypeInfo(AnsiString), Serie, []);

    lResult := (__Instance as IServiceAdministracion).FolioActual(Campo, Serie);

    __Message.InitializeResponseMessage(__Transport, 'LibraryAdministracion', 'ServiceAdministracion', 'FolioActualResponse');
    __Message.Write('Result', TypeInfo(Integer), lResult, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
  end;
end;

procedure TServiceAdministracion_Invoker.Invoke_FolioActual2(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function FolioActual2(const Campo: AnsiString; const Serie: AnsiString; const EstacionID: Integer): Integer; }
var
  Campo: AnsiString;
  Serie: AnsiString;
  EstacionID: Integer;
  lResult: Integer;
begin
  try
    __Message.Read('Campo', TypeInfo(AnsiString), Campo, []);
    __Message.Read('Serie', TypeInfo(AnsiString), Serie, []);
    __Message.Read('EstacionID', TypeInfo(Integer), EstacionID, []);

    lResult := (__Instance as IServiceAdministracion).FolioActual2(Campo, Serie, EstacionID);

    __Message.InitializeResponseMessage(__Transport, 'LibraryAdministracion', 'ServiceAdministracion', 'FolioActual2Response');
    __Message.Write('Result', TypeInfo(Integer), lResult, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
  end;
end;

procedure TServiceAdministracion_Invoker.Invoke_GuardaAccesos(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ procedure GuardaAccesos(const UsuarioID: Integer; const Lista: AnsiString); }
var
  UsuarioID: Integer;
  Lista: AnsiString;
begin
  try
    __Message.Read('UsuarioID', TypeInfo(Integer), UsuarioID, []);
    __Message.Read('Lista', TypeInfo(AnsiString), Lista, []);

    (__Instance as IServiceAdministracion).GuardaAccesos(UsuarioID, Lista);

    __Message.InitializeResponseMessage(__Transport, 'LibraryAdministracion', 'ServiceAdministracion', 'GuardaAccesosResponse');
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

    __oResponseOptions := [roNoResponse];

  finally
  end;
end;

procedure TServiceAdministracion_Invoker.Invoke_GuardaConsumoExpress(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function GuardaConsumoExpress(const Consumo: TConsumoExpress): Boolean; }
var
  Consumo: LibraryAdministracion_Intf.TConsumoExpress;
  lResult: Boolean;
  __lObjectDisposer: TROObjectDisposer;
begin
  Consumo := nil;
  try
    __Message.Read('Consumo', TypeInfo(LibraryAdministracion_Intf.TConsumoExpress), Consumo, []);

    lResult := (__Instance as IServiceAdministracion).GuardaConsumoExpress(Consumo);

    __Message.InitializeResponseMessage(__Transport, 'LibraryAdministracion', 'ServiceAdministracion', 'GuardaConsumoExpressResponse');
    __Message.Write('Result', TypeInfo(Boolean), lResult, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
    __lObjectDisposer := TROObjectDisposer.Create(__Instance);
    try
      __lObjectDisposer.Add(Consumo);
    finally
      __lObjectDisposer.Free();
    end;
  end;
end;

procedure TServiceAdministracion_Invoker.Invoke_GuardaLimiteFactura(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ procedure GuardaLimiteFactura(const UsuarioID: Int64; const Cantidad: Double); }
var
  UsuarioID: Int64;
  Cantidad: Double;
begin
  try
    __Message.Read('UsuarioID', TypeInfo(Int64), UsuarioID, []);
    __Message.Read('Cantidad', TypeInfo(Double), Cantidad, []);

    (__Instance as IServiceAdministracion).GuardaLimiteFactura(UsuarioID, Cantidad);

    __Message.InitializeResponseMessage(__Transport, 'LibraryAdministracion', 'ServiceAdministracion', 'GuardaLimiteFacturaResponse');
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

    __oResponseOptions := [roNoResponse];

  finally
  end;
end;

procedure TServiceAdministracion_Invoker.Invoke_GuardarDatosFactura(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ procedure GuardarDatosFactura(const DatosFactura: TDatosFactura); }
var
  DatosFactura: LibraryAdministracion_Intf.TDatosFactura;
  __lObjectDisposer: TROObjectDisposer;
begin
  DatosFactura := nil;
  try
    __Message.Read('DatosFactura', TypeInfo(LibraryAdministracion_Intf.TDatosFactura), DatosFactura, []);

    (__Instance as IServiceAdministracion).GuardarDatosFactura(DatosFactura);

    __Message.InitializeResponseMessage(__Transport, 'LibraryAdministracion', 'ServiceAdministracion', 'GuardarDatosFacturaResponse');
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

    __oResponseOptions := [roNoResponse];

  finally
    __lObjectDisposer := TROObjectDisposer.Create(__Instance);
    try
      __lObjectDisposer.Add(DatosFactura);
    finally
      __lObjectDisposer.Free();
    end;
  end;
end;

procedure TServiceAdministracion_Invoker.Invoke_GuardarDatosLiquidacion(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ procedure GuardarDatosLiquidacion(const DatosLiquidacion: TDatosLiquidacion); }
var
  DatosLiquidacion: LibraryAdministracion_Intf.TDatosLiquidacion;
  __lObjectDisposer: TROObjectDisposer;
begin
  DatosLiquidacion := nil;
  try
    __Message.Read('DatosLiquidacion', TypeInfo(LibraryAdministracion_Intf.TDatosLiquidacion), DatosLiquidacion, []);

    (__Instance as IServiceAdministracion).GuardarDatosLiquidacion(DatosLiquidacion);

    __Message.InitializeResponseMessage(__Transport, 'LibraryAdministracion', 'ServiceAdministracion', 'GuardarDatosLiquidacionResponse');
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

    __oResponseOptions := [roNoResponse];

  finally
    __lObjectDisposer := TROObjectDisposer.Create(__Instance);
    try
      __lObjectDisposer.Add(DatosLiquidacion);
    finally
      __lObjectDisposer.Free();
    end;
  end;
end;

procedure TServiceAdministracion_Invoker.Invoke_GuardarDatosReciboPago(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ procedure GuardarDatosReciboPago(const DatosReciboPago: TDatosReciboPago); }
var
  DatosReciboPago: LibraryAdministracion_Intf.TDatosReciboPago;
  __lObjectDisposer: TROObjectDisposer;
begin
  DatosReciboPago := nil;
  try
    __Message.Read('DatosReciboPago', TypeInfo(LibraryAdministracion_Intf.TDatosReciboPago), DatosReciboPago, []);

    (__Instance as IServiceAdministracion).GuardarDatosReciboPago(DatosReciboPago);

    __Message.InitializeResponseMessage(__Transport, 'LibraryAdministracion', 'ServiceAdministracion', 'GuardarDatosReciboPagoResponse');
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

    __oResponseOptions := [roNoResponse];

  finally
    __lObjectDisposer := TROObjectDisposer.Create(__Instance);
    try
      __lObjectDisposer.Add(DatosReciboPago);
    finally
      __lObjectDisposer.Free();
    end;
  end;
end;

procedure TServiceAdministracion_Invoker.Invoke_GuardarFacturaExpress(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function GuardarFacturaExpress(const ClienteID: Integer; const Serie: AnsiString; const EstacionID: Integer; const TicketID: Integer): TFacturaExpress; }
var
  ClienteID: Integer;
  Serie: AnsiString;
  EstacionID: Integer;
  TicketID: Integer;
  lResult: LibraryAdministracion_Intf.TFacturaExpress;
  __lObjectDisposer: TROObjectDisposer;
begin
  lResult := nil;
  try
    __Message.Read('ClienteID', TypeInfo(Integer), ClienteID, []);
    __Message.Read('Serie', TypeInfo(AnsiString), Serie, []);
    __Message.Read('EstacionID', TypeInfo(Integer), EstacionID, []);
    __Message.Read('TicketID', TypeInfo(Integer), TicketID, []);

    lResult := (__Instance as IServiceAdministracion).GuardarFacturaExpress(ClienteID, Serie, EstacionID, TicketID);

    __Message.InitializeResponseMessage(__Transport, 'LibraryAdministracion', 'ServiceAdministracion', 'GuardarFacturaExpressResponse');
    __Message.Write('Result', TypeInfo(LibraryAdministracion_Intf.TFacturaExpress), lResult, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
    __lObjectDisposer := TROObjectDisposer.Create(__Instance);
    try
      __lObjectDisposer.Add(lResult);
    finally
      __lObjectDisposer.Free();
    end;
  end;
end;

procedure TServiceAdministracion_Invoker.Invoke_InsertaDeposito(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ procedure InsertaDeposito(const DepositoID: Integer; const Cantidad: Double; const Usuario: Integer; const Fecha: DateTime; const Secuencia: Integer; 
                              const EstacionID: Integer; const Descripcion: AnsiString; const Ejercicio: Integer; const Periodo: Integer; 
                              const Dia: Integer); }
var
  DepositoID: Integer;
  Cantidad: Double;
  Usuario: Integer;
  Fecha: DateTime;
  Secuencia: Integer;
  EstacionID: Integer;
  Descripcion: AnsiString;
  Ejercicio: Integer;
  Periodo: Integer;
  Dia: Integer;
begin
  try
    __Message.Read('DepositoID', TypeInfo(Integer), DepositoID, []);
    __Message.Read('Cantidad', TypeInfo(Double), Cantidad, []);
    __Message.Read('Usuario', TypeInfo(Integer), Usuario, []);
    __Message.Read('Fecha', TypeInfo(DateTime), Fecha, [paIsDateTime]);
    __Message.Read('Secuencia', TypeInfo(Integer), Secuencia, []);
    __Message.Read('EstacionID', TypeInfo(Integer), EstacionID, []);
    __Message.Read('Descripcion', TypeInfo(AnsiString), Descripcion, []);
    __Message.Read('Ejercicio', TypeInfo(Integer), Ejercicio, []);
    __Message.Read('Periodo', TypeInfo(Integer), Periodo, []);
    __Message.Read('Dia', TypeInfo(Integer), Dia, []);

    (__Instance as IServiceAdministracion).InsertaDeposito(DepositoID, Cantidad, Usuario, Fecha, Secuencia, EstacionID, Descripcion, Ejercicio, Periodo, Dia);

    __Message.InitializeResponseMessage(__Transport, 'LibraryAdministracion', 'ServiceAdministracion', 'InsertaDepositoResponse');
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

    __oResponseOptions := [roNoResponse];

  finally
  end;
end;

procedure TServiceAdministracion_Invoker.Invoke_InsertaProductoPrecio(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ procedure InsertaProductoPrecio(const ProductoID: Integer; const EstacionID: Integer; const Precio: Double); }
var
  ProductoID: Integer;
  EstacionID: Integer;
  Precio: Double;
begin
  try
    __Message.Read('ProductoID', TypeInfo(Integer), ProductoID, []);
    __Message.Read('EstacionID', TypeInfo(Integer), EstacionID, []);
    __Message.Read('Precio', TypeInfo(Double), Precio, []);

    (__Instance as IServiceAdministracion).InsertaProductoPrecio(ProductoID, EstacionID, Precio);

    __Message.InitializeResponseMessage(__Transport, 'LibraryAdministracion', 'ServiceAdministracion', 'InsertaProductoPrecioResponse');
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

    __oResponseOptions := [roNoResponse];

  finally
  end;
end;

procedure TServiceAdministracion_Invoker.Invoke_Login(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function Login(const Usuario: AnsiString; const Clave: AnsiString): TLoginInfo; }
var
  Usuario: AnsiString;
  Clave: AnsiString;
  lResult: LibraryAdministracion_Intf.TLoginInfo;
  __lObjectDisposer: TROObjectDisposer;
begin
  lResult := nil;
  try
    __Message.Read('Usuario', TypeInfo(AnsiString), Usuario, []);
    __Message.Read('Clave', TypeInfo(AnsiString), Clave, []);

    lResult := (__Instance as IServiceAdministracion).Login(Usuario, Clave);

    __Message.InitializeResponseMessage(__Transport, 'LibraryAdministracion', 'ServiceAdministracion', 'LoginResponse');
    __Message.Write('Result', TypeInfo(LibraryAdministracion_Intf.TLoginInfo), lResult, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
    __lObjectDisposer := TROObjectDisposer.Create(__Instance);
    try
      __lObjectDisposer.Add(lResult);
    finally
      __lObjectDisposer.Free();
    end;
  end;
end;

procedure TServiceAdministracion_Invoker.Invoke_ModificarFolioActual(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function ModificarFolioActual(const Campo: AnsiString; const Serie: AnsiString; const Folio: Integer): AnsiString; }
var
  Campo: AnsiString;
  Serie: AnsiString;
  Folio: Integer;
  lResult: AnsiString;
begin
  try
    __Message.Read('Campo', TypeInfo(AnsiString), Campo, []);
    __Message.Read('Serie', TypeInfo(AnsiString), Serie, []);
    __Message.Read('Folio', TypeInfo(Integer), Folio, []);

    lResult := (__Instance as IServiceAdministracion).ModificarFolioActual(Campo, Serie, Folio);

    __Message.InitializeResponseMessage(__Transport, 'LibraryAdministracion', 'ServiceAdministracion', 'ModificarFolioActualResponse');
    __Message.Write('Result', TypeInfo(AnsiString), lResult, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
  end;
end;

procedure TServiceAdministracion_Invoker.Invoke_ObtenerStatusCupon(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function ObtenerStatusCupon(const Barras: AnsiString): AnsiString; }
var
  Barras: AnsiString;
  lResult: AnsiString;
begin
  try
    __Message.Read('Barras', TypeInfo(AnsiString), Barras, []);

    lResult := (__Instance as IServiceAdministracion).ObtenerStatusCupon(Barras);

    __Message.InitializeResponseMessage(__Transport, 'LibraryAdministracion', 'ServiceAdministracion', 'ObtenerStatusCuponResponse');
    __Message.Write('Result', TypeInfo(AnsiString), lResult, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
  end;
end;

procedure TServiceAdministracion_Invoker.Invoke_ObtenerTipoCambioIDPorEstacion(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function ObtenerTipoCambioIDPorEstacion(const EstacionID: Integer): Integer; }
var
  EstacionID: Integer;
  lResult: Integer;
begin
  try
    __Message.Read('EstacionID', TypeInfo(Integer), EstacionID, []);

    lResult := (__Instance as IServiceAdministracion).ObtenerTipoCambioIDPorEstacion(EstacionID);

    __Message.InitializeResponseMessage(__Transport, 'LibraryAdministracion', 'ServiceAdministracion', 'ObtenerTipoCambioIDPorEstacionResponse');
    __Message.Write('Result', TypeInfo(Integer), lResult, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
  end;
end;

procedure TServiceAdministracion_Invoker.Invoke_ObtenerTipoCambioPorEstacion(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function ObtenerTipoCambioPorEstacion(const EstacionID: Integer): Double; }
var
  EstacionID: Integer;
  lResult: Double;
begin
  try
    __Message.Read('EstacionID', TypeInfo(Integer), EstacionID, []);

    lResult := (__Instance as IServiceAdministracion).ObtenerTipoCambioPorEstacion(EstacionID);

    __Message.InitializeResponseMessage(__Transport, 'LibraryAdministracion', 'ServiceAdministracion', 'ObtenerTipoCambioPorEstacionResponse');
    __Message.Write('Result', TypeInfo(Double), lResult, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
  end;
end;

procedure TServiceAdministracion_Invoker.Invoke_PrecioProducto(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function PrecioProducto(const EstacionID: Integer; const ProductoID: Integer): Double; }
var
  EstacionID: Integer;
  ProductoID: Integer;
  lResult: Double;
begin
  try
    __Message.Read('EstacionID', TypeInfo(Integer), EstacionID, []);
    __Message.Read('ProductoID', TypeInfo(Integer), ProductoID, []);

    lResult := (__Instance as IServiceAdministracion).PrecioProducto(EstacionID, ProductoID);

    __Message.InitializeResponseMessage(__Transport, 'LibraryAdministracion', 'ServiceAdministracion', 'PrecioProductoResponse');
    __Message.Write('Result', TypeInfo(Double), lResult, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
  end;
end;

procedure TServiceAdministracion_Invoker.Invoke_StatusTicket(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function StatusTicket(const EstacionID: Integer; const TicketID: Integer): Integer; }
var
  EstacionID: Integer;
  TicketID: Integer;
  lResult: Integer;
begin
  try
    __Message.Read('EstacionID', TypeInfo(Integer), EstacionID, []);
    __Message.Read('TicketID', TypeInfo(Integer), TicketID, []);

    lResult := (__Instance as IServiceAdministracion).StatusTicket(EstacionID, TicketID);

    __Message.InitializeResponseMessage(__Transport, 'LibraryAdministracion', 'ServiceAdministracion', 'StatusTicketResponse');
    __Message.Write('Result', TypeInfo(Integer), lResult, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
  end;
end;

procedure TServiceAdministracion_Invoker.Invoke_SumaAnticipo(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function SumaAnticipo(const Estacion: Integer; const Secuencia: Integer): Double; }
var
  Estacion: Integer;
  Secuencia: Integer;
  lResult: Double;
begin
  try
    __Message.Read('Estacion', TypeInfo(Integer), Estacion, []);
    __Message.Read('Secuencia', TypeInfo(Integer), Secuencia, []);

    lResult := (__Instance as IServiceAdministracion).SumaAnticipo(Estacion, Secuencia);

    __Message.InitializeResponseMessage(__Transport, 'LibraryAdministracion', 'ServiceAdministracion', 'SumaAnticipoResponse');
    __Message.Write('Result', TypeInfo(Double), lResult, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
  end;
end;

procedure TServiceAdministracion_Invoker.Invoke_SumaVentasCorte(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function SumaVentasCorte(const Estacion: Integer; const Secuencia: Integer; const AgrupacionID: Integer): Double; }
var
  Estacion: Integer;
  Secuencia: Integer;
  AgrupacionID: Integer;
  lResult: Double;
begin
  try
    __Message.Read('Estacion', TypeInfo(Integer), Estacion, []);
    __Message.Read('Secuencia', TypeInfo(Integer), Secuencia, []);
    __Message.Read('AgrupacionID', TypeInfo(Integer), AgrupacionID, []);

    lResult := (__Instance as IServiceAdministracion).SumaVentasCorte(Estacion, Secuencia, AgrupacionID);

    __Message.InitializeResponseMessage(__Transport, 'LibraryAdministracion', 'ServiceAdministracion', 'SumaVentasCorteResponse');
    __Message.Write('Result', TypeInfo(Double), lResult, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
  end;
end;

procedure TServiceAdministracion_Invoker.Invoke_ValoresTurno(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function ValoresTurno(const EstacionID: Integer; const TurnoID: Integer): TValoresTurno; }
var
  EstacionID: Integer;
  TurnoID: Integer;
  lResult: LibraryAdministracion_Intf.TValoresTurno;
  __lObjectDisposer: TROObjectDisposer;
begin
  lResult := nil;
  try
    __Message.Read('EstacionID', TypeInfo(Integer), EstacionID, []);
    __Message.Read('TurnoID', TypeInfo(Integer), TurnoID, []);

    lResult := (__Instance as IServiceAdministracion).ValoresTurno(EstacionID, TurnoID);

    __Message.InitializeResponseMessage(__Transport, 'LibraryAdministracion', 'ServiceAdministracion', 'ValoresTurnoResponse');
    __Message.Write('Result', TypeInfo(LibraryAdministracion_Intf.TValoresTurno), lResult, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
    __lObjectDisposer := TROObjectDisposer.Create(__Instance);
    try
      __lObjectDisposer.Add(lResult);
    finally
      __lObjectDisposer.Free();
    end;
  end;
end;

procedure TServiceAdministracion_Invoker.Invoke_VersionServer(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function VersionServer: AnsiString; }
var
  lResult: AnsiString;
begin
  try
    lResult := (__Instance as IServiceAdministracion).VersionServer;

    __Message.InitializeResponseMessage(__Transport, 'LibraryAdministracion', 'ServiceAdministracion', 'VersionServerResponse');
    __Message.Write('Result', TypeInfo(AnsiString), lResult, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
  end;
end;

procedure TServiceAdministracion_Invoker.Invoke_LiquidacionCerrada(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function LiquidacionCerrada(const EstacionID: Integer; const TurnoID: Integer): Boolean; }
var
  EstacionID: Integer;
  TurnoID: Integer;
  lResult: Boolean;
begin
  try
    __Message.Read('EstacionID', TypeInfo(Integer), EstacionID, []);
    __Message.Read('TurnoID', TypeInfo(Integer), TurnoID, []);

    lResult := (__Instance as IServiceAdministracion).LiquidacionCerrada(EstacionID, TurnoID);

    __Message.InitializeResponseMessage(__Transport, 'LibraryAdministracion', 'ServiceAdministracion', 'LiquidacionCerradaResponse');
    __Message.Write('Result', TypeInfo(Boolean), lResult, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
  end;
end;

procedure TServiceAdministracion_Invoker.Invoke_ClienteValido(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function ClienteValido(const ClienteID: Integer; const NewClienteID: Integer): Boolean; }
var
  ClienteID: Integer;
  NewClienteID: Integer;
  lResult: Boolean;
begin
  try
    __Message.Read('ClienteID', TypeInfo(Integer), ClienteID, []);
    __Message.Read('NewClienteID', TypeInfo(Integer), NewClienteID, []);

    lResult := (__Instance as IServiceAdministracion).ClienteValido(ClienteID, NewClienteID);

    __Message.InitializeResponseMessage(__Transport, 'LibraryAdministracion', 'ServiceAdministracion', 'ClienteValidoResponse');
    __Message.Write('Result', TypeInfo(Boolean), lResult, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
  end;
end;

procedure TServiceAdministracion_Invoker.Invoke_BuscaOtroProducto(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function BuscaOtroProducto(const EstacionID: Integer; const Codigo: AnsiString): TOtroProducto; }
var
  EstacionID: Integer;
  Codigo: AnsiString;
  lResult: LibraryAdministracion_Intf.TOtroProducto;
  __lObjectDisposer: TROObjectDisposer;
begin
  lResult := nil;
  try
    __Message.Read('EstacionID', TypeInfo(Integer), EstacionID, []);
    __Message.Read('Codigo', TypeInfo(AnsiString), Codigo, []);

    lResult := (__Instance as IServiceAdministracion).BuscaOtroProducto(EstacionID, Codigo);

    __Message.InitializeResponseMessage(__Transport, 'LibraryAdministracion', 'ServiceAdministracion', 'BuscaOtroProductoResponse');
    __Message.Write('Result', TypeInfo(LibraryAdministracion_Intf.TOtroProducto), lResult, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
    __lObjectDisposer := TROObjectDisposer.Create(__Instance);
    try
      __lObjectDisposer.Add(lResult);
    finally
      __lObjectDisposer.Free();
    end;
  end;
end;

procedure TServiceAdministracion_Invoker.Invoke_TurnoALiquidacionID(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function TurnoALiquidacionID(const TurnoID: Integer; const EstacionID: Integer): Integer; }
var
  TurnoID: Integer;
  EstacionID: Integer;
  lResult: Integer;
begin
  try
    __Message.Read('TurnoID', TypeInfo(Integer), TurnoID, []);
    __Message.Read('EstacionID', TypeInfo(Integer), EstacionID, []);

    lResult := (__Instance as IServiceAdministracion).TurnoALiquidacionID(TurnoID, EstacionID);

    __Message.InitializeResponseMessage(__Transport, 'LibraryAdministracion', 'ServiceAdministracion', 'TurnoALiquidacionIDResponse');
    __Message.Write('Result', TypeInfo(Integer), lResult, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
  end;
end;

procedure TServiceAdministracion_Invoker.Invoke_BuscaSagarpa(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function BuscaSagarpa(const EstacionID: Integer): TSagarpa; }
var
  EstacionID: Integer;
  lResult: LibraryAdministracion_Intf.TSagarpa;
  __lObjectDisposer: TROObjectDisposer;
begin
  lResult := nil;
  try
    __Message.Read('EstacionID', TypeInfo(Integer), EstacionID, []);

    lResult := (__Instance as IServiceAdministracion).BuscaSagarpa(EstacionID);

    __Message.InitializeResponseMessage(__Transport, 'LibraryAdministracion', 'ServiceAdministracion', 'BuscaSagarpaResponse');
    __Message.Write('Result', TypeInfo(LibraryAdministracion_Intf.TSagarpa), lResult, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
    __lObjectDisposer := TROObjectDisposer.Create(__Instance);
    try
      __lObjectDisposer.Add(lResult);
    finally
      __lObjectDisposer.Free();
    end;
  end;
end;

procedure TServiceAdministracion_Invoker.Invoke_PuntosCalculaSaldo(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function PuntosCalculaSaldo(const ClienteID: Integer): Double; }
var
  ClienteID: Integer;
  lResult: Double;
begin
  try
    __Message.Read('ClienteID', TypeInfo(Integer), ClienteID, []);

    lResult := (__Instance as IServiceAdministracion).PuntosCalculaSaldo(ClienteID);

    __Message.InitializeResponseMessage(__Transport, 'LibraryAdministracion', 'ServiceAdministracion', 'PuntosCalculaSaldoResponse');
    __Message.Write('Result', TypeInfo(Double), lResult, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
  end;
end;

procedure TServiceAdministracion_Invoker.Invoke_PuntosCalculaPuntos(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function PuntosCalculaPuntos(const ClienteID: Integer; const ProductoID: Integer; const Volumen: Double): Double; }
var
  ClienteID: Integer;
  ProductoID: Integer;
  Volumen: Double;
  lResult: Double;
begin
  try
    __Message.Read('ClienteID', TypeInfo(Integer), ClienteID, []);
    __Message.Read('ProductoID', TypeInfo(Integer), ProductoID, []);
    __Message.Read('Volumen', TypeInfo(Double), Volumen, []);

    lResult := (__Instance as IServiceAdministracion).PuntosCalculaPuntos(ClienteID, ProductoID, Volumen);

    __Message.InitializeResponseMessage(__Transport, 'LibraryAdministracion', 'ServiceAdministracion', 'PuntosCalculaPuntosResponse');
    __Message.Write('Result', TypeInfo(Double), lResult, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
  end;
end;

procedure TServiceAdministracion_Invoker.Invoke_PuntosGuardaDatos(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ procedure PuntosGuardaDatos(const Datos: TDatosPuntos); }
var
  Datos: LibraryAdministracion_Intf.TDatosPuntos;
  __lObjectDisposer: TROObjectDisposer;
begin
  Datos := nil;
  try
    __Message.Read('Datos', TypeInfo(LibraryAdministracion_Intf.TDatosPuntos), Datos, []);

    (__Instance as IServiceAdministracion).PuntosGuardaDatos(Datos);

    __Message.InitializeResponseMessage(__Transport, 'LibraryAdministracion', 'ServiceAdministracion', 'PuntosGuardaDatosResponse');
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

    __oResponseOptions := [roNoResponse];

  finally
    __lObjectDisposer := TROObjectDisposer.Create(__Instance);
    try
      __lObjectDisposer.Add(Datos);
    finally
      __lObjectDisposer.Free();
    end;
  end;
end;

procedure TServiceAdministracion_Invoker.Invoke_PuntosDatos(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function PuntosDatos(const ClienteID: Integer): TDatosPuntos; }
var
  ClienteID: Integer;
  lResult: LibraryAdministracion_Intf.TDatosPuntos;
  __lObjectDisposer: TROObjectDisposer;
begin
  lResult := nil;
  try
    __Message.Read('ClienteID', TypeInfo(Integer), ClienteID, []);

    lResult := (__Instance as IServiceAdministracion).PuntosDatos(ClienteID);

    __Message.InitializeResponseMessage(__Transport, 'LibraryAdministracion', 'ServiceAdministracion', 'PuntosDatosResponse');
    __Message.Write('Result', TypeInfo(LibraryAdministracion_Intf.TDatosPuntos), lResult, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
    __lObjectDisposer := TROObjectDisposer.Create(__Instance);
    try
      __lObjectDisposer.Add(lResult);
    finally
      __lObjectDisposer.Free();
    end;
  end;
end;

procedure TServiceAdministracion_Invoker.Invoke_EliminaAutomaticosLiquidacion(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function EliminaAutomaticosLiquidacion(const EstacionID: Integer; const TurnoID: Integer): Boolean; }
var
  EstacionID: Integer;
  TurnoID: Integer;
  lResult: Boolean;
begin
  try
    __Message.Read('EstacionID', TypeInfo(Integer), EstacionID, []);
    __Message.Read('TurnoID', TypeInfo(Integer), TurnoID, []);

    lResult := (__Instance as IServiceAdministracion).EliminaAutomaticosLiquidacion(EstacionID, TurnoID);

    __Message.InitializeResponseMessage(__Transport, 'LibraryAdministracion', 'ServiceAdministracion', 'EliminaAutomaticosLiquidacionResponse');
    __Message.Write('Result', TypeInfo(Boolean), lResult, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
  end;
end;

procedure TServiceAdministracion_Invoker.Invoke_BuscaDespachadorLiquidacion(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function BuscaDespachadorLiquidacion(const BombaID: Integer; const EstacionID: Integer; const TurnoID: Integer): Integer; }
var
  BombaID: Integer;
  EstacionID: Integer;
  TurnoID: Integer;
  lResult: Integer;
begin
  try
    __Message.Read('BombaID', TypeInfo(Integer), BombaID, []);
    __Message.Read('EstacionID', TypeInfo(Integer), EstacionID, []);
    __Message.Read('TurnoID', TypeInfo(Integer), TurnoID, []);

    lResult := (__Instance as IServiceAdministracion).BuscaDespachadorLiquidacion(BombaID, EstacionID, TurnoID);

    __Message.InitializeResponseMessage(__Transport, 'LibraryAdministracion', 'ServiceAdministracion', 'BuscaDespachadorLiquidacionResponse');
    __Message.Write('Result', TypeInfo(Integer), lResult, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
  end;
end;

procedure TServiceAdministracion_Invoker.Invoke_EntregaPremio(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function EntregaPremio(const ClienteID: Integer; const PremioID: Integer; const Cantidad: Integer): TEntregaPremio; }
var
  ClienteID: Integer;
  PremioID: Integer;
  Cantidad: Integer;
  lResult: LibraryAdministracion_Intf.TEntregaPremio;
  __lObjectDisposer: TROObjectDisposer;
begin
  lResult := nil;
  try
    __Message.Read('ClienteID', TypeInfo(Integer), ClienteID, []);
    __Message.Read('PremioID', TypeInfo(Integer), PremioID, []);
    __Message.Read('Cantidad', TypeInfo(Integer), Cantidad, []);

    lResult := (__Instance as IServiceAdministracion).EntregaPremio(ClienteID, PremioID, Cantidad);

    __Message.InitializeResponseMessage(__Transport, 'LibraryAdministracion', 'ServiceAdministracion', 'EntregaPremioResponse');
    __Message.Write('Result', TypeInfo(LibraryAdministracion_Intf.TEntregaPremio), lResult, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
    __lObjectDisposer := TROObjectDisposer.Create(__Instance);
    try
      __lObjectDisposer.Add(lResult);
    finally
      __lObjectDisposer.Free();
    end;
  end;
end;

procedure TServiceAdministracion_Invoker.Invoke_DatosPremio(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function DatosPremio(const PremioID: Integer): TDatosPremio; }
var
  PremioID: Integer;
  lResult: LibraryAdministracion_Intf.TDatosPremio;
  __lObjectDisposer: TROObjectDisposer;
begin
  lResult := nil;
  try
    __Message.Read('PremioID', TypeInfo(Integer), PremioID, []);

    lResult := (__Instance as IServiceAdministracion).DatosPremio(PremioID);

    __Message.InitializeResponseMessage(__Transport, 'LibraryAdministracion', 'ServiceAdministracion', 'DatosPremioResponse');
    __Message.Write('Result', TypeInfo(LibraryAdministracion_Intf.TDatosPremio), lResult, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
    __lObjectDisposer := TROObjectDisposer.Create(__Instance);
    try
      __lObjectDisposer.Add(lResult);
    finally
      __lObjectDisposer.Free();
    end;
  end;
end;

procedure TServiceAdministracion_Invoker.Invoke_ValidaConsumo(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function ValidaConsumo(const Consumo: TConsumoExpress): Integer; }
var
  Consumo: LibraryAdministracion_Intf.TConsumoExpress;
  lResult: Integer;
  __lObjectDisposer: TROObjectDisposer;
begin
  Consumo := nil;
  try
    __Message.Read('Consumo', TypeInfo(LibraryAdministracion_Intf.TConsumoExpress), Consumo, []);

    lResult := (__Instance as IServiceAdministracion).ValidaConsumo(Consumo);

    __Message.InitializeResponseMessage(__Transport, 'LibraryAdministracion', 'ServiceAdministracion', 'ValidaConsumoResponse');
    __Message.Write('Result', TypeInfo(Integer), lResult, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
    __lObjectDisposer := TROObjectDisposer.Create(__Instance);
    try
      __lObjectDisposer.Add(Consumo);
    finally
      __lObjectDisposer.Free();
    end;
  end;
end;

procedure TServiceAdministracion_Invoker.Invoke_AgrupacionesBomba(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function AgrupacionesBomba(const EstacionID: Integer): AAgrupacion; }
var
  EstacionID: Integer;
  lResult: LibraryAdministracion_Intf.AAgrupacion;
  __lObjectDisposer: TROObjectDisposer;
begin
  lResult := nil;
  try
    __Message.Read('EstacionID', TypeInfo(Integer), EstacionID, []);

    lResult := (__Instance as IServiceAdministracion).AgrupacionesBomba(EstacionID);

    __Message.InitializeResponseMessage(__Transport, 'LibraryAdministracion', 'ServiceAdministracion', 'AgrupacionesBombaResponse');
    __Message.Write('Result', TypeInfo(LibraryAdministracion_Intf.AAgrupacion), lResult, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
    __lObjectDisposer := TROObjectDisposer.Create(__Instance);
    try
      __lObjectDisposer.Add(lResult);
    finally
      __lObjectDisposer.Free();
    end;
  end;
end;

procedure TServiceAdministracion_Invoker.Invoke_DatosCerrarLiquidacion(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function DatosCerrarLiquidacion(const EstacionID: Integer; const TurnoID: Integer): TDatosCerrarLiquidacion; }
var
  EstacionID: Integer;
  TurnoID: Integer;
  lResult: LibraryAdministracion_Intf.TDatosCerrarLiquidacion;
  __lObjectDisposer: TROObjectDisposer;
begin
  lResult := nil;
  try
    __Message.Read('EstacionID', TypeInfo(Integer), EstacionID, []);
    __Message.Read('TurnoID', TypeInfo(Integer), TurnoID, []);

    lResult := (__Instance as IServiceAdministracion).DatosCerrarLiquidacion(EstacionID, TurnoID);

    __Message.InitializeResponseMessage(__Transport, 'LibraryAdministracion', 'ServiceAdministracion', 'DatosCerrarLiquidacionResponse');
    __Message.Write('Result', TypeInfo(LibraryAdministracion_Intf.TDatosCerrarLiquidacion), lResult, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
    __lObjectDisposer := TROObjectDisposer.Create(__Instance);
    try
      __lObjectDisposer.Add(lResult);
    finally
      __lObjectDisposer.Free();
    end;
  end;
end;

procedure TServiceAdministracion_Invoker.Invoke_ProcesaVentasLiquidacion(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ procedure ProcesaVentasLiquidacion(const Datos: TDatosCerrarLiquidacion); }
var
  Datos: LibraryAdministracion_Intf.TDatosCerrarLiquidacion;
  __lObjectDisposer: TROObjectDisposer;
begin
  Datos := nil;
  try
    __Message.Read('Datos', TypeInfo(LibraryAdministracion_Intf.TDatosCerrarLiquidacion), Datos, []);

    (__Instance as IServiceAdministracion).ProcesaVentasLiquidacion(Datos);

    __Message.InitializeResponseMessage(__Transport, 'LibraryAdministracion', 'ServiceAdministracion', 'ProcesaVentasLiquidacionResponse');
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

    __oResponseOptions := [roNoResponse];

  finally
    __lObjectDisposer := TROObjectDisposer.Create(__Instance);
    try
      __lObjectDisposer.Add(Datos);
    finally
      __lObjectDisposer.Free();
    end;
  end;
end;

procedure TServiceAdministracion_Invoker.Invoke_TicketsLiquidacion(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function TicketsLiquidacion(const LiquidacionID: Integer): AnsiString; }
var
  LiquidacionID: Integer;
  lResult: AnsiString;
begin
  try
    __Message.Read('LiquidacionID', TypeInfo(Integer), LiquidacionID, []);

    lResult := (__Instance as IServiceAdministracion).TicketsLiquidacion(LiquidacionID);

    __Message.InitializeResponseMessage(__Transport, 'LibraryAdministracion', 'ServiceAdministracion', 'TicketsLiquidacionResponse');
    __Message.Write('Result', TypeInfo(AnsiString), lResult, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
  end;
end;

procedure TServiceAdministracion_Invoker.Invoke_ValidaFolioFactura(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function ValidaFolioFactura(const Serie: AnsiString; const Folio: Integer): Boolean; }
var
  Serie: AnsiString;
  Folio: Integer;
  lResult: Boolean;
begin
  try
    __Message.Read('Serie', TypeInfo(AnsiString), Serie, []);
    __Message.Read('Folio', TypeInfo(Integer), Folio, []);

    lResult := (__Instance as IServiceAdministracion).ValidaFolioFactura(Serie, Folio);

    __Message.InitializeResponseMessage(__Transport, 'LibraryAdministracion', 'ServiceAdministracion', 'ValidaFolioFacturaResponse');
    __Message.Write('Result', TypeInfo(Boolean), lResult, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
  end;
end;

procedure TServiceAdministracion_Invoker.Invoke_PuntosGuardaCriterios(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ procedure PuntosGuardaCriterios(const PuntosCriterioID: Integer; const Datos: AnsiString); }
var
  PuntosCriterioID: Integer;
  Datos: AnsiString;
begin
  try
    __Message.Read('PuntosCriterioID', TypeInfo(Integer), PuntosCriterioID, []);
    __Message.Read('Datos', TypeInfo(AnsiString), Datos, []);

    (__Instance as IServiceAdministracion).PuntosGuardaCriterios(PuntosCriterioID, Datos);

    __Message.InitializeResponseMessage(__Transport, 'LibraryAdministracion', 'ServiceAdministracion', 'PuntosGuardaCriteriosResponse');
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

    __oResponseOptions := [roNoResponse];

  finally
  end;
end;

procedure TServiceAdministracion_Invoker.Invoke_DatosFacturaElectronica(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function DatosFacturaElectronica(const FacturaID: Integer; const EstacionID: Integer): TFacturaElectronica; }
var
  FacturaID: Integer;
  EstacionID: Integer;
  lResult: LibraryAdministracion_Intf.TFacturaElectronica;
  __lObjectDisposer: TROObjectDisposer;
begin
  lResult := nil;
  try
    __Message.Read('FacturaID', TypeInfo(Integer), FacturaID, []);
    __Message.Read('EstacionID', TypeInfo(Integer), EstacionID, []);

    lResult := (__Instance as IServiceAdministracion).DatosFacturaElectronica(FacturaID, EstacionID);

    __Message.InitializeResponseMessage(__Transport, 'LibraryAdministracion', 'ServiceAdministracion', 'DatosFacturaElectronicaResponse');
    __Message.Write('Result', TypeInfo(LibraryAdministracion_Intf.TFacturaElectronica), lResult, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
    __lObjectDisposer := TROObjectDisposer.Create(__Instance);
    try
      __lObjectDisposer.Add(lResult);
    finally
      __lObjectDisposer.Free();
    end;
  end;
end;

procedure TServiceAdministracion_Invoker.Invoke_LlavePrivaCertificado(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function LlavePrivaCertificado(const LlavePrivada: AnsiString; const Certificado: AnsiString; const GasolineroID: Integer; const Password: AnsiString; 
                                   const EstacionID: Integer): AnsiString; }
var
  LlavePrivada: AnsiString;
  Certificado: AnsiString;
  GasolineroID: Integer;
  Password: AnsiString;
  EstacionID: Integer;
  lResult: AnsiString;
begin
  try
    __Message.Read('LlavePrivada', TypeInfo(AnsiString), LlavePrivada, []);
    __Message.Read('Certificado', TypeInfo(AnsiString), Certificado, []);
    __Message.Read('GasolineroID', TypeInfo(Integer), GasolineroID, []);
    __Message.Read('Password', TypeInfo(AnsiString), Password, []);
    __Message.Read('EstacionID', TypeInfo(Integer), EstacionID, []);

    lResult := (__Instance as IServiceAdministracion).LlavePrivaCertificado(LlavePrivada, Certificado, GasolineroID, Password, EstacionID);

    __Message.InitializeResponseMessage(__Transport, 'LibraryAdministracion', 'ServiceAdministracion', 'LlavePrivaCertificadoResponse');
    __Message.Write('Result', TypeInfo(AnsiString), lResult, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
  end;
end;

procedure TServiceAdministracion_Invoker.Invoke_SELLOPEMs(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function SELLOPEMs(const Texto: Widestring; const EstacionID: Integer): AnsiString; }
var
  Texto: Widestring;
  EstacionID: Integer;
  lResult: AnsiString;
begin
  try
    __Message.Read('Texto', TypeInfo(Widestring), Texto, []);
    __Message.Read('EstacionID', TypeInfo(Integer), EstacionID, []);

    lResult := (__Instance as IServiceAdministracion).SELLOPEMs(Texto, EstacionID);

    __Message.InitializeResponseMessage(__Transport, 'LibraryAdministracion', 'ServiceAdministracion', 'SELLOPEMsResponse');
    __Message.Write('Result', TypeInfo(AnsiString), lResult, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
  end;
end;

procedure TServiceAdministracion_Invoker.Invoke_CERs(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function CERs(const DIR: AnsiString): AnsiString; }
var
  DIR: AnsiString;
  lResult: AnsiString;
begin
  try
    __Message.Read('DIR', TypeInfo(AnsiString), DIR, []);

    lResult := (__Instance as IServiceAdministracion).CERs(DIR);

    __Message.InitializeResponseMessage(__Transport, 'LibraryAdministracion', 'ServiceAdministracion', 'CERsResponse');
    __Message.Write('Result', TypeInfo(AnsiString), lResult, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
  end;
end;

procedure TServiceAdministracion_Invoker.Invoke_ValidaLiquidacionDespachador(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function ValidaLiquidacionDespachador(const LiquidacionID: Integer): AnsiString; }
var
  LiquidacionID: Integer;
  lResult: AnsiString;
begin
  try
    __Message.Read('LiquidacionID', TypeInfo(Integer), LiquidacionID, []);

    lResult := (__Instance as IServiceAdministracion).ValidaLiquidacionDespachador(LiquidacionID);

    __Message.InitializeResponseMessage(__Transport, 'LibraryAdministracion', 'ServiceAdministracion', 'ValidaLiquidacionDespachadorResponse');
    __Message.Write('Result', TypeInfo(AnsiString), lResult, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
  end;
end;

procedure TServiceAdministracion_Invoker.Invoke_ActualizaLiquidacionProd(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function ActualizaLiquidacionProd(const Estacion: Integer; const FechaIni: DateTime; const FechaFin: DateTime; const TurnoID: Integer): Boolean; }
var
  Estacion: Integer;
  FechaIni: DateTime;
  FechaFin: DateTime;
  TurnoID: Integer;
  lResult: Boolean;
begin
  try
    __Message.Read('Estacion', TypeInfo(Integer), Estacion, []);
    __Message.Read('FechaIni', TypeInfo(DateTime), FechaIni, [paIsDateTime]);
    __Message.Read('FechaFin', TypeInfo(DateTime), FechaFin, [paIsDateTime]);
    __Message.Read('TurnoID', TypeInfo(Integer), TurnoID, []);

    lResult := (__Instance as IServiceAdministracion).ActualizaLiquidacionProd(Estacion, FechaIni, FechaFin, TurnoID);

    __Message.InitializeResponseMessage(__Transport, 'LibraryAdministracion', 'ServiceAdministracion', 'ActualizaLiquidacionProdResponse');
    __Message.Write('Result', TypeInfo(Boolean), lResult, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
  end;
end;

procedure TServiceAdministracion_Invoker.Invoke_PuntosDespachador(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ procedure PuntosDespachador(const TurnoID: Integer; const EstacionID: Integer; const UsuarioID: Integer); }
var
  TurnoID: Integer;
  EstacionID: Integer;
  UsuarioID: Integer;
begin
  try
    __Message.Read('TurnoID', TypeInfo(Integer), TurnoID, []);
    __Message.Read('EstacionID', TypeInfo(Integer), EstacionID, []);
    __Message.Read('UsuarioID', TypeInfo(Integer), UsuarioID, []);

    (__Instance as IServiceAdministracion).PuntosDespachador(TurnoID, EstacionID, UsuarioID);

    __Message.InitializeResponseMessage(__Transport, 'LibraryAdministracion', 'ServiceAdministracion', 'PuntosDespachadorResponse');
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

    __oResponseOptions := [roNoResponse];

  finally
  end;
end;

procedure TServiceAdministracion_Invoker.Invoke_GuardarDatosFacturaPemex(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ procedure GuardarDatosFacturaPemex(const DatosFacturaPemex: TDatosFacturaPemex); }
var
  DatosFacturaPemex: LibraryAdministracion_Intf.TDatosFacturaPemex;
  __lObjectDisposer: TROObjectDisposer;
begin
  DatosFacturaPemex := nil;
  try
    __Message.Read('DatosFacturaPemex', TypeInfo(LibraryAdministracion_Intf.TDatosFacturaPemex), DatosFacturaPemex, []);

    (__Instance as IServiceAdministracion).GuardarDatosFacturaPemex(DatosFacturaPemex);

    __Message.InitializeResponseMessage(__Transport, 'LibraryAdministracion', 'ServiceAdministracion', 'GuardarDatosFacturaPemexResponse');
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

    __oResponseOptions := [roNoResponse];

  finally
    __lObjectDisposer := TROObjectDisposer.Create(__Instance);
    try
      __lObjectDisposer.Add(DatosFacturaPemex);
    finally
      __lObjectDisposer.Free();
    end;
  end;
end;

procedure TServiceAdministracion_Invoker.Invoke_AfectaInventarios(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function AfectaInventarios(const LiquidacionID: Integer; const UsuarioID: Integer): AnsiString; }
var
  LiquidacionID: Integer;
  UsuarioID: Integer;
  lResult: AnsiString;
begin
  try
    __Message.Read('LiquidacionID', TypeInfo(Integer), LiquidacionID, []);
    __Message.Read('UsuarioID', TypeInfo(Integer), UsuarioID, []);

    lResult := (__Instance as IServiceAdministracion).AfectaInventarios(LiquidacionID, UsuarioID);

    __Message.InitializeResponseMessage(__Transport, 'LibraryAdministracion', 'ServiceAdministracion', 'AfectaInventariosResponse');
    __Message.Write('Result', TypeInfo(AnsiString), lResult, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
  end;
end;

procedure TServiceAdministracion_Invoker.Invoke_InsertaFacturaElectronica(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ procedure InsertaFacturaElectronica(const FacturaElectronicaID: Integer; const CadenaOriginal: Widestring; const SelloDigital: Widestring; 
                                        const FacturaID: Integer; const Vigencia: Boolean; const Enviado: Boolean; const NoCertificado: AnsiString; 
                                        const NoAprobacion: AnsiString; const FechaAprobacion: DateTime); }
var
  FacturaElectronicaID: Integer;
  CadenaOriginal: Widestring;
  SelloDigital: Widestring;
  FacturaID: Integer;
  Vigencia: Boolean;
  Enviado: Boolean;
  NoCertificado: AnsiString;
  NoAprobacion: AnsiString;
  FechaAprobacion: DateTime;
begin
  try
    __Message.Read('FacturaElectronicaID', TypeInfo(Integer), FacturaElectronicaID, []);
    __Message.Read('CadenaOriginal', TypeInfo(Widestring), CadenaOriginal, []);
    __Message.Read('SelloDigital', TypeInfo(Widestring), SelloDigital, []);
    __Message.Read('FacturaID', TypeInfo(Integer), FacturaID, []);
    __Message.Read('Vigencia', TypeInfo(Boolean), Vigencia, []);
    __Message.Read('Enviado', TypeInfo(Boolean), Enviado, []);
    __Message.Read('NoCertificado', TypeInfo(AnsiString), NoCertificado, []);
    __Message.Read('NoAprobacion', TypeInfo(AnsiString), NoAprobacion, []);
    __Message.Read('FechaAprobacion', TypeInfo(DateTime), FechaAprobacion, [paIsDateTime]);

    (__Instance as IServiceAdministracion).InsertaFacturaElectronica(FacturaElectronicaID, CadenaOriginal, SelloDigital, FacturaID, Vigencia, Enviado, NoCertificado, NoAprobacion, FechaAprobacion);

    __Message.InitializeResponseMessage(__Transport, 'LibraryAdministracion', 'ServiceAdministracion', 'InsertaFacturaElectronicaResponse');
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

    __oResponseOptions := [roNoResponse];

  finally
  end;
end;

procedure TServiceAdministracion_Invoker.Invoke_CERsNUM(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function CERsNUM(const DIR: AnsiString): AnsiString; }
var
  DIR: AnsiString;
  lResult: AnsiString;
begin
  try
    __Message.Read('DIR', TypeInfo(AnsiString), DIR, []);

    lResult := (__Instance as IServiceAdministracion).CERsNUM(DIR);

    __Message.InitializeResponseMessage(__Transport, 'LibraryAdministracion', 'ServiceAdministracion', 'CERsNUMResponse');
    __Message.Write('Result', TypeInfo(AnsiString), lResult, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
  end;
end;

initialization
end.
